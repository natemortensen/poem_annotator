# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org.

afterDialogCreate = ($dialog) ->	
	$dialog.on 'blur keyup paste input', '[contenteditable]', ->
	  $this = $(this)
	  input_name = $this.data('input-name')
	  $input = $dialog.find("input[name=#{input_name}]")
	  $input.val $this.text()

updatePoem = (article_html) ->
	response = false
	$.ajax
	  type: "PATCH"
	  async: false
	  url: window.location.pathname
	  data:
	  	poem:
	  		content: article_html
	  success: -> response = true
	  dataType: 'json'
  response

beforeDialogCreate = ->
	if $('.top-bar-section li a:contains("Sign Out")').length == 0
		alert "You need to sign in before you can annotate this poem!"
		false

afterCancel = ->
	$('#poem, #poem_title').css
		position: 'static'

getAnnotations = ->	
	response = []
	$.ajax
	  dataType: "json"
	  async: false
	  url: window.location.pathname + '/annotations'
	  success: (data) -> response = data
  response

deleteAnnotations = (annotate_ids) ->
  successful = []
  $.each annotate_ids, (i, annotate_id) ->
    $.ajax
      type: "DELETE"
      async: false
      url: window.location.pathname + "/annotations/" + annotate_id
      dataType: "json"
      success: ->
        successful.push annotate_id
  successful

afterAnnotationRender = ($annotation) ->
	$img = $annotation.find('.annotate-fill-userImage')
	img_url = $img.text()
	$img.replaceWith("<img src='#{img_url}' class='left'>")

	$annotation.on 'blur keyup paste input', '[contenteditable]', ->
	  $this = $(this)
	  input_name = $this.data('input-name')
	  $input = $annotation.find("input[name=#{input_name}]")
	  $input.val $this.text()
	  $annotation.find('button').show()

createAnnotation = (data) ->
	response = {}
	$.ajax
		type: "POST"
		async: false
		url: window.location.pathname + '/annotations'
		data: data
		success: (json) ->
			response['annotation'] = json
			response['status'] = 'success'
		dataType: 'json'
	response

updateAnnotation = (data) ->
	response = {}
	$.ajax
		type: "PATCH"
		async: false
		url: window.location.pathname + '/annotations/' + data['annotation']['annotate_id']
		data: data
		success: (json) ->
			response['annotation'] = json
			response['status'] = 'success'
		dataType: 'json'
	response


$ ->
	$('.save-article').click ->
		updatePoem $('#poem').html()

	$('#show_orphaned').change ->
		$('#orphaned').toggle()

	if $('#poem.annotatable').length > 0
		$('#poem.annotatable').annotate
			annotation:
				container: $('ul#annotations')[0]
				position: 'left'
				offset_amount: 25
				template: "<span class='annotate-fill-userImage'></span> <button type='button' class='annotate-remove button alert small right'>x</button> <div class='annotation-inner'><p class='bold annotate-fill-userName'></p><p class='annotate-fill-content' data-input-name='content' contenteditable='true'></p><div style='clear: both;'></div></div><form><input type='hidden' name='content'></input><button type='submit' class='hide small'>Update</button><button type='button' class='secondary annotate-revert small hide'>Cancel</button></form>"
				tag_name: 'li'
				existing_data: getAnnotations()
				afterRender: afterAnnotationRender
				create: createAnnotation
				render_from_marks: false
				update: updateAnnotation
				delete: deleteAnnotations
			article:
				update: updatePoem
			dialog:
				template: '<form><div class="row"><div class="errors"></div><input name="content" type="hidden"></input><p class="bold">Annotation</p><p class="dialog-content" contenteditable="true" data-ph="Annotation content" data-input-name="content"></p></div><div class="row"><button type="submit" class="small">Add Annotation</button> <button type="button" class="annotate-cancel button secondary small">Cancel</button></div></form>'
				offset_amount: 25
				trigger_type: 'select'
				position: 'left'
				build_on_select: false
				beforeCreate: beforeDialogCreate
				afterCreate: afterDialogCreate
				afterCancel: afterCancel